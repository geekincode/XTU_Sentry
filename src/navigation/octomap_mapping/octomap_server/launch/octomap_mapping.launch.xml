<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->


<launch>
<node pkg="octomap_server" exec="octomap_server_node" name="octomap_server">
	<param name="resolution" value="0.05" />
	<param name="frame_id" value="map" />
	<param name="sensor_model.max_range" value="5.0" />
	<remap from="cloud_in" to="/cloud_registered" />

	<!-- 输入点云高度过滤 -->
	<param name="point_cloud_min_z" value="-0.25" />
	<param name="point_cloud_max_z" value="-0.2" />

	<!-- 2D 栅格地图配置 -->
	<param name="publish_2d_map" value="true" />
	<param name="project_complete_map" value="true" />
	<!-- <param name="occupancy_min_z" value="0.9" />
	<param name="occupancy_max_z" value="1.0" /> -->
	<param name="filter_ground" value="true" />
	<param name="ground_filter/distance" value="0.1" />
</node>
</launch>
